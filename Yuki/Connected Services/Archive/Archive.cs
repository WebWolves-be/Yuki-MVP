//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Yuki.Archive
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.theyukicompany.com/", ConfigurationName="Yuki.Archive.ArchiveSoap")]
    public interface ArchiveSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/DocumentFolders", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Xml.XmlNode> DocumentFoldersAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/DocumentFolderCounts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Xml.XmlNode> DocumentFolderCountsAsync(string sessionID, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/DocumentFolderTabs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Xml.XmlNode> DocumentFolderTabsAsync(string sessionID, string folderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/Documents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Xml.XmlNode> DocumentsAsync(string sessionID, Yuki.Archive.DocumentSortOrder sortOrder, System.DateTime startDate, System.DateTime endDate, int numberOfRecords, int startRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/DocumentsInFolder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Xml.XmlNode> DocumentsInFolderAsync(string sessionID, int folderID, Yuki.Archive.DocumentSortOrder sortOrder, System.DateTime startDate, System.DateTime endDate, int numberOfRecords, int startRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/DocumentsInTab", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Xml.XmlNode> DocumentsInTabAsync(string sessionID, int tabID, Yuki.Archive.DocumentSortOrder sortOrder, System.DateTime startDate, System.DateTime endDate, int numberOfRecords, int startRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/FindDocument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Xml.XmlNode> FindDocumentAsync(string sessionID, string documentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/DocumentsByType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Xml.XmlNode> DocumentsByTypeAsync(string sessionID, int documentType, Yuki.Archive.DocumentSortOrder sortOrder, System.DateTime startDate, System.DateTime endDate, int numberOfRecords, int startRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/ModifiedDocumentsByType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Xml.XmlNode> ModifiedDocumentsByTypeAsync(string sessionID, int documentType, Yuki.Archive.DocumentSortOrder sortOrder, System.DateTime modifiedSince, int numberOfRecords, int startRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/ModifiedDocumentsInFolder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Xml.XmlNode> ModifiedDocumentsInFolderAsync(string sessionID, int folderID, Yuki.Archive.DocumentSortOrder sortOrder, System.DateTime modifiedSince, int numberOfRecords, int startRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/SearchDocuments", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Xml.XmlNode> SearchDocumentsAsync(string sessionID, Yuki.Archive.SearchOption searchOption, string searchText, int folderID, int tabID, Yuki.Archive.DocumentSortOrder sortOrder, System.DateTime startDate, System.DateTime endDate, int numberOfRecords, int startRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/DocumentBinaryData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Yuki.Archive.DocumentBinaryDataResponse> DocumentBinaryDataAsync(Yuki.Archive.DocumentBinaryDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/DocumentFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Xml.XmlNode> DocumentFileAsync(string sessionID, string documentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/DocumentDownloadUrl", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> DocumentDownloadUrlAsync(string sessionID, string documentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/DocumentXMLData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Xml.XmlNode> DocumentXMLDataAsync(string sessionID, string documentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/DocumentXMLDataAsBinary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Yuki.Archive.DocumentXMLDataAsBinaryResponse> DocumentXMLDataAsBinaryAsync(Yuki.Archive.DocumentXMLDataAsBinaryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/DocumentXMLDataAsString", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> DocumentXMLDataAsStringAsync(string sessionID, string documentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/DocumentImage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Yuki.Archive.DocumentImageResponse> DocumentImageAsync(Yuki.Archive.DocumentImageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/DocumentImageCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> DocumentImageCountAsync(string sessionID, string documentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/DocumentBundle", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Xml.XmlNode> DocumentBundleAsync(string sessionID, string documentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/UploadDocument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Yuki.Archive.UploadDocumentResponse> UploadDocumentAsync(Yuki.Archive.UploadDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/UploadDocumentWithData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Yuki.Archive.UploadDocumentWithDataResponse> UploadDocumentWithDataAsync(Yuki.Archive.UploadDocumentWithDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/UploadDocumentWithAttachment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Yuki.Archive.UploadDocumentWithAttachmentResponse> UploadDocumentWithAttachmentAsync(Yuki.Archive.UploadDocumentWithAttachmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/PaymentMethods", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Xml.XmlNode> PaymentMethodsAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/CostCategories", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Xml.XmlNode> CostCategoriesAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/Currencies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Xml.XmlNode> CurrenciesAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/Menu", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Xml.XmlNode> MenuAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/Projects", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Xml.XmlNode> ProjectsAsync(string sessionID, string administrationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/Authenticate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AuthenticateAsync(string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/AuthenticateClient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AuthenticateClientAsync(string clientID, string clientSecret, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/AuthenticateByUserName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AuthenticateByUserNameAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/Domains", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Xml.XmlNode> DomainsAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/Companies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Xml.XmlNode> CompaniesAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/AdministrationID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AdministrationIDAsync(string sessionID, string administrationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/Administrations", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Xml.XmlNode> AdministrationsAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/GetCurrentDomain", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetCurrentDomainAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/SetCurrentDomain", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task SetCurrentDomainAsync(string sessionID, string domainID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/Language", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> LanguageAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/SupportedLanguages", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.Xml.XmlNode> SupportedLanguagesAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.theyukicompany.com/SetLanguage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task SetLanguageAsync(string sessionID, string language);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.theyukicompany.com/")]
    public enum DocumentSortOrder
    {
        
        /// <remarks/>
        CreatedDesc,
        
        /// <remarks/>
        CreatedAsc,
        
        /// <remarks/>
        ModifiedDesc,
        
        /// <remarks/>
        ModifiedAsc,
        
        /// <remarks/>
        DocumentDateDesc,
        
        /// <remarks/>
        DocumentDateAsc,
        
        /// <remarks/>
        ContactNameAsc,
        
        /// <remarks/>
        ContactNameDesc,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.theyukicompany.com/")]
    public enum SearchOption
    {
        
        /// <remarks/>
        All,
        
        /// <remarks/>
        Creator,
        
        /// <remarks/>
        Contact,
        
        /// <remarks/>
        Subject,
        
        /// <remarks/>
        Tag,
        
        /// <remarks/>
        Type,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DocumentBinaryData", WrapperNamespace="http://www.theyukicompany.com/", IsWrapped=true)]
    public partial class DocumentBinaryDataRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=0)]
        public string sessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=1)]
        public string documentID;
        
        public DocumentBinaryDataRequest()
        {
        }
        
        public DocumentBinaryDataRequest(string sessionID, string documentID)
        {
            this.sessionID = sessionID;
            this.documentID = documentID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DocumentBinaryDataResponse", WrapperNamespace="http://www.theyukicompany.com/", IsWrapped=true)]
    public partial class DocumentBinaryDataResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DocumentBinaryDataResult;
        
        public DocumentBinaryDataResponse()
        {
        }
        
        public DocumentBinaryDataResponse(byte[] DocumentBinaryDataResult)
        {
            this.DocumentBinaryDataResult = DocumentBinaryDataResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DocumentXMLDataAsBinary", WrapperNamespace="http://www.theyukicompany.com/", IsWrapped=true)]
    public partial class DocumentXMLDataAsBinaryRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=0)]
        public string sessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=1)]
        public string documentID;
        
        public DocumentXMLDataAsBinaryRequest()
        {
        }
        
        public DocumentXMLDataAsBinaryRequest(string sessionID, string documentID)
        {
            this.sessionID = sessionID;
            this.documentID = documentID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DocumentXMLDataAsBinaryResponse", WrapperNamespace="http://www.theyukicompany.com/", IsWrapped=true)]
    public partial class DocumentXMLDataAsBinaryResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DocumentXMLDataAsBinaryResult;
        
        public DocumentXMLDataAsBinaryResponse()
        {
        }
        
        public DocumentXMLDataAsBinaryResponse(byte[] DocumentXMLDataAsBinaryResult)
        {
            this.DocumentXMLDataAsBinaryResult = DocumentXMLDataAsBinaryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DocumentImage", WrapperNamespace="http://www.theyukicompany.com/", IsWrapped=true)]
    public partial class DocumentImageRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=0)]
        public string sessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=1)]
        public string documentID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=2)]
        public int maxWidth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=3)]
        public int maxHeight;
        
        public DocumentImageRequest()
        {
        }
        
        public DocumentImageRequest(string sessionID, string documentID, int maxWidth, int maxHeight)
        {
            this.sessionID = sessionID;
            this.documentID = documentID;
            this.maxWidth = maxWidth;
            this.maxHeight = maxHeight;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DocumentImageResponse", WrapperNamespace="http://www.theyukicompany.com/", IsWrapped=true)]
    public partial class DocumentImageResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DocumentImageResult;
        
        public DocumentImageResponse()
        {
        }
        
        public DocumentImageResponse(byte[] DocumentImageResult)
        {
            this.DocumentImageResult = DocumentImageResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadDocument", WrapperNamespace="http://www.theyukicompany.com/", IsWrapped=true)]
    public partial class UploadDocumentRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=0)]
        public string sessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=1)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=3)]
        public int folder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=4)]
        public string administrationID;
        
        public UploadDocumentRequest()
        {
        }
        
        public UploadDocumentRequest(string sessionID, string fileName, byte[] data, int folder, string administrationID)
        {
            this.sessionID = sessionID;
            this.fileName = fileName;
            this.data = data;
            this.folder = folder;
            this.administrationID = administrationID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadDocumentResponse", WrapperNamespace="http://www.theyukicompany.com/", IsWrapped=true)]
    public partial class UploadDocumentResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=0)]
        public string UploadDocumentResult;
        
        public UploadDocumentResponse()
        {
        }
        
        public UploadDocumentResponse(string UploadDocumentResult)
        {
            this.UploadDocumentResult = UploadDocumentResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadDocumentWithData", WrapperNamespace="http://www.theyukicompany.com/", IsWrapped=true)]
    public partial class UploadDocumentWithDataRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=0)]
        public string sessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=1)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=3)]
        public int folder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=4)]
        public string administrationID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=5)]
        public string currency;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=6)]
        public decimal amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=7)]
        public string costCategory;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=8)]
        public int paymentMethod;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=9)]
        public string project;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=10)]
        public string remarks;
        
        public UploadDocumentWithDataRequest()
        {
        }
        
        public UploadDocumentWithDataRequest(string sessionID, string fileName, byte[] data, int folder, string administrationID, string currency, decimal amount, string costCategory, int paymentMethod, string project, string remarks)
        {
            this.sessionID = sessionID;
            this.fileName = fileName;
            this.data = data;
            this.folder = folder;
            this.administrationID = administrationID;
            this.currency = currency;
            this.amount = amount;
            this.costCategory = costCategory;
            this.paymentMethod = paymentMethod;
            this.project = project;
            this.remarks = remarks;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadDocumentWithDataResponse", WrapperNamespace="http://www.theyukicompany.com/", IsWrapped=true)]
    public partial class UploadDocumentWithDataResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=0)]
        public string UploadDocumentWithDataResult;
        
        public UploadDocumentWithDataResponse()
        {
        }
        
        public UploadDocumentWithDataResponse(string UploadDocumentWithDataResult)
        {
            this.UploadDocumentWithDataResult = UploadDocumentWithDataResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadDocumentWithAttachment", WrapperNamespace="http://www.theyukicompany.com/", IsWrapped=true)]
    public partial class UploadDocumentWithAttachmentRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=0)]
        public string sessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=1)]
        public string fileName1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=3)]
        public string fileName2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=5)]
        public int folder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=6)]
        public string administrationID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=7)]
        public string currency;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=8)]
        public decimal amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=9)]
        public string costCategory;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=10)]
        public int paymentMethod;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=11)]
        public string project;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=12)]
        public string remarks;
        
        public UploadDocumentWithAttachmentRequest()
        {
        }
        
        public UploadDocumentWithAttachmentRequest(string sessionID, string fileName1, byte[] data1, string fileName2, byte[] data2, int folder, string administrationID, string currency, decimal amount, string costCategory, int paymentMethod, string project, string remarks)
        {
            this.sessionID = sessionID;
            this.fileName1 = fileName1;
            this.data1 = data1;
            this.fileName2 = fileName2;
            this.data2 = data2;
            this.folder = folder;
            this.administrationID = administrationID;
            this.currency = currency;
            this.amount = amount;
            this.costCategory = costCategory;
            this.paymentMethod = paymentMethod;
            this.project = project;
            this.remarks = remarks;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadDocumentWithAttachmentResponse", WrapperNamespace="http://www.theyukicompany.com/", IsWrapped=true)]
    public partial class UploadDocumentWithAttachmentResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.theyukicompany.com/", Order=0)]
        public string UploadDocumentWithAttachmentResult;
        
        public UploadDocumentWithAttachmentResponse()
        {
        }
        
        public UploadDocumentWithAttachmentResponse(string UploadDocumentWithAttachmentResult)
        {
            this.UploadDocumentWithAttachmentResult = UploadDocumentWithAttachmentResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface ArchiveSoapChannel : Yuki.Archive.ArchiveSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class ArchiveSoapClient : System.ServiceModel.ClientBase<Yuki.Archive.ArchiveSoap>, Yuki.Archive.ArchiveSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ArchiveSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(ArchiveSoapClient.GetBindingForEndpoint(endpointConfiguration), ArchiveSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ArchiveSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ArchiveSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ArchiveSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ArchiveSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ArchiveSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> DocumentFoldersAsync(string sessionID)
        {
            return base.Channel.DocumentFoldersAsync(sessionID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> DocumentFolderCountsAsync(string sessionID, int year)
        {
            return base.Channel.DocumentFolderCountsAsync(sessionID, year);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> DocumentFolderTabsAsync(string sessionID, string folderID)
        {
            return base.Channel.DocumentFolderTabsAsync(sessionID, folderID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> DocumentsAsync(string sessionID, Yuki.Archive.DocumentSortOrder sortOrder, System.DateTime startDate, System.DateTime endDate, int numberOfRecords, int startRecord)
        {
            return base.Channel.DocumentsAsync(sessionID, sortOrder, startDate, endDate, numberOfRecords, startRecord);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> DocumentsInFolderAsync(string sessionID, int folderID, Yuki.Archive.DocumentSortOrder sortOrder, System.DateTime startDate, System.DateTime endDate, int numberOfRecords, int startRecord)
        {
            return base.Channel.DocumentsInFolderAsync(sessionID, folderID, sortOrder, startDate, endDate, numberOfRecords, startRecord);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> DocumentsInTabAsync(string sessionID, int tabID, Yuki.Archive.DocumentSortOrder sortOrder, System.DateTime startDate, System.DateTime endDate, int numberOfRecords, int startRecord)
        {
            return base.Channel.DocumentsInTabAsync(sessionID, tabID, sortOrder, startDate, endDate, numberOfRecords, startRecord);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> FindDocumentAsync(string sessionID, string documentID)
        {
            return base.Channel.FindDocumentAsync(sessionID, documentID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> DocumentsByTypeAsync(string sessionID, int documentType, Yuki.Archive.DocumentSortOrder sortOrder, System.DateTime startDate, System.DateTime endDate, int numberOfRecords, int startRecord)
        {
            return base.Channel.DocumentsByTypeAsync(sessionID, documentType, sortOrder, startDate, endDate, numberOfRecords, startRecord);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> ModifiedDocumentsByTypeAsync(string sessionID, int documentType, Yuki.Archive.DocumentSortOrder sortOrder, System.DateTime modifiedSince, int numberOfRecords, int startRecord)
        {
            return base.Channel.ModifiedDocumentsByTypeAsync(sessionID, documentType, sortOrder, modifiedSince, numberOfRecords, startRecord);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> ModifiedDocumentsInFolderAsync(string sessionID, int folderID, Yuki.Archive.DocumentSortOrder sortOrder, System.DateTime modifiedSince, int numberOfRecords, int startRecord)
        {
            return base.Channel.ModifiedDocumentsInFolderAsync(sessionID, folderID, sortOrder, modifiedSince, numberOfRecords, startRecord);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> SearchDocumentsAsync(string sessionID, Yuki.Archive.SearchOption searchOption, string searchText, int folderID, int tabID, Yuki.Archive.DocumentSortOrder sortOrder, System.DateTime startDate, System.DateTime endDate, int numberOfRecords, int startRecord)
        {
            return base.Channel.SearchDocumentsAsync(sessionID, searchOption, searchText, folderID, tabID, sortOrder, startDate, endDate, numberOfRecords, startRecord);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Yuki.Archive.DocumentBinaryDataResponse> Yuki.Archive.ArchiveSoap.DocumentBinaryDataAsync(Yuki.Archive.DocumentBinaryDataRequest request)
        {
            return base.Channel.DocumentBinaryDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<Yuki.Archive.DocumentBinaryDataResponse> DocumentBinaryDataAsync(string sessionID, string documentID)
        {
            Yuki.Archive.DocumentBinaryDataRequest inValue = new Yuki.Archive.DocumentBinaryDataRequest();
            inValue.sessionID = sessionID;
            inValue.documentID = documentID;
            return ((Yuki.Archive.ArchiveSoap)(this)).DocumentBinaryDataAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> DocumentFileAsync(string sessionID, string documentID)
        {
            return base.Channel.DocumentFileAsync(sessionID, documentID);
        }
        
        public System.Threading.Tasks.Task<string> DocumentDownloadUrlAsync(string sessionID, string documentID)
        {
            return base.Channel.DocumentDownloadUrlAsync(sessionID, documentID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> DocumentXMLDataAsync(string sessionID, string documentID)
        {
            return base.Channel.DocumentXMLDataAsync(sessionID, documentID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Yuki.Archive.DocumentXMLDataAsBinaryResponse> Yuki.Archive.ArchiveSoap.DocumentXMLDataAsBinaryAsync(Yuki.Archive.DocumentXMLDataAsBinaryRequest request)
        {
            return base.Channel.DocumentXMLDataAsBinaryAsync(request);
        }
        
        public System.Threading.Tasks.Task<Yuki.Archive.DocumentXMLDataAsBinaryResponse> DocumentXMLDataAsBinaryAsync(string sessionID, string documentID)
        {
            Yuki.Archive.DocumentXMLDataAsBinaryRequest inValue = new Yuki.Archive.DocumentXMLDataAsBinaryRequest();
            inValue.sessionID = sessionID;
            inValue.documentID = documentID;
            return ((Yuki.Archive.ArchiveSoap)(this)).DocumentXMLDataAsBinaryAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<string> DocumentXMLDataAsStringAsync(string sessionID, string documentID)
        {
            return base.Channel.DocumentXMLDataAsStringAsync(sessionID, documentID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Yuki.Archive.DocumentImageResponse> Yuki.Archive.ArchiveSoap.DocumentImageAsync(Yuki.Archive.DocumentImageRequest request)
        {
            return base.Channel.DocumentImageAsync(request);
        }
        
        public System.Threading.Tasks.Task<Yuki.Archive.DocumentImageResponse> DocumentImageAsync(string sessionID, string documentID, int maxWidth, int maxHeight)
        {
            Yuki.Archive.DocumentImageRequest inValue = new Yuki.Archive.DocumentImageRequest();
            inValue.sessionID = sessionID;
            inValue.documentID = documentID;
            inValue.maxWidth = maxWidth;
            inValue.maxHeight = maxHeight;
            return ((Yuki.Archive.ArchiveSoap)(this)).DocumentImageAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<int> DocumentImageCountAsync(string sessionID, string documentID)
        {
            return base.Channel.DocumentImageCountAsync(sessionID, documentID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> DocumentBundleAsync(string sessionID, string documentID)
        {
            return base.Channel.DocumentBundleAsync(sessionID, documentID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Yuki.Archive.UploadDocumentResponse> Yuki.Archive.ArchiveSoap.UploadDocumentAsync(Yuki.Archive.UploadDocumentRequest request)
        {
            return base.Channel.UploadDocumentAsync(request);
        }
        
        public System.Threading.Tasks.Task<Yuki.Archive.UploadDocumentResponse> UploadDocumentAsync(string sessionID, string fileName, byte[] data, int folder, string administrationID)
        {
            Yuki.Archive.UploadDocumentRequest inValue = new Yuki.Archive.UploadDocumentRequest();
            inValue.sessionID = sessionID;
            inValue.fileName = fileName;
            inValue.data = data;
            inValue.folder = folder;
            inValue.administrationID = administrationID;
            return ((Yuki.Archive.ArchiveSoap)(this)).UploadDocumentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Yuki.Archive.UploadDocumentWithDataResponse> Yuki.Archive.ArchiveSoap.UploadDocumentWithDataAsync(Yuki.Archive.UploadDocumentWithDataRequest request)
        {
            return base.Channel.UploadDocumentWithDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<Yuki.Archive.UploadDocumentWithDataResponse> UploadDocumentWithDataAsync(string sessionID, string fileName, byte[] data, int folder, string administrationID, string currency, decimal amount, string costCategory, int paymentMethod, string project, string remarks)
        {
            Yuki.Archive.UploadDocumentWithDataRequest inValue = new Yuki.Archive.UploadDocumentWithDataRequest();
            inValue.sessionID = sessionID;
            inValue.fileName = fileName;
            inValue.data = data;
            inValue.folder = folder;
            inValue.administrationID = administrationID;
            inValue.currency = currency;
            inValue.amount = amount;
            inValue.costCategory = costCategory;
            inValue.paymentMethod = paymentMethod;
            inValue.project = project;
            inValue.remarks = remarks;
            return ((Yuki.Archive.ArchiveSoap)(this)).UploadDocumentWithDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Yuki.Archive.UploadDocumentWithAttachmentResponse> Yuki.Archive.ArchiveSoap.UploadDocumentWithAttachmentAsync(Yuki.Archive.UploadDocumentWithAttachmentRequest request)
        {
            return base.Channel.UploadDocumentWithAttachmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<Yuki.Archive.UploadDocumentWithAttachmentResponse> UploadDocumentWithAttachmentAsync(string sessionID, string fileName1, byte[] data1, string fileName2, byte[] data2, int folder, string administrationID, string currency, decimal amount, string costCategory, int paymentMethod, string project, string remarks)
        {
            Yuki.Archive.UploadDocumentWithAttachmentRequest inValue = new Yuki.Archive.UploadDocumentWithAttachmentRequest();
            inValue.sessionID = sessionID;
            inValue.fileName1 = fileName1;
            inValue.data1 = data1;
            inValue.fileName2 = fileName2;
            inValue.data2 = data2;
            inValue.folder = folder;
            inValue.administrationID = administrationID;
            inValue.currency = currency;
            inValue.amount = amount;
            inValue.costCategory = costCategory;
            inValue.paymentMethod = paymentMethod;
            inValue.project = project;
            inValue.remarks = remarks;
            return ((Yuki.Archive.ArchiveSoap)(this)).UploadDocumentWithAttachmentAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> PaymentMethodsAsync(string sessionID)
        {
            return base.Channel.PaymentMethodsAsync(sessionID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> CostCategoriesAsync(string sessionID)
        {
            return base.Channel.CostCategoriesAsync(sessionID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> CurrenciesAsync(string sessionID)
        {
            return base.Channel.CurrenciesAsync(sessionID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> MenuAsync(string sessionID)
        {
            return base.Channel.MenuAsync(sessionID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> ProjectsAsync(string sessionID, string administrationID)
        {
            return base.Channel.ProjectsAsync(sessionID, administrationID);
        }
        
        public System.Threading.Tasks.Task<string> AuthenticateAsync(string accessKey)
        {
            return base.Channel.AuthenticateAsync(accessKey);
        }
        
        public System.Threading.Tasks.Task<string> AuthenticateClientAsync(string clientID, string clientSecret, string accessKey)
        {
            return base.Channel.AuthenticateClientAsync(clientID, clientSecret, accessKey);
        }
        
        public System.Threading.Tasks.Task<string> AuthenticateByUserNameAsync(string userName, string password)
        {
            return base.Channel.AuthenticateByUserNameAsync(userName, password);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> DomainsAsync(string sessionID)
        {
            return base.Channel.DomainsAsync(sessionID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> CompaniesAsync(string sessionID)
        {
            return base.Channel.CompaniesAsync(sessionID);
        }
        
        public System.Threading.Tasks.Task<string> AdministrationIDAsync(string sessionID, string administrationName)
        {
            return base.Channel.AdministrationIDAsync(sessionID, administrationName);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> AdministrationsAsync(string sessionID)
        {
            return base.Channel.AdministrationsAsync(sessionID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetCurrentDomainAsync(string sessionID)
        {
            return base.Channel.GetCurrentDomainAsync(sessionID);
        }
        
        public System.Threading.Tasks.Task SetCurrentDomainAsync(string sessionID, string domainID)
        {
            return base.Channel.SetCurrentDomainAsync(sessionID, domainID);
        }
        
        public System.Threading.Tasks.Task<string> LanguageAsync(string sessionID)
        {
            return base.Channel.LanguageAsync(sessionID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> SupportedLanguagesAsync(string sessionID)
        {
            return base.Channel.SupportedLanguagesAsync(sessionID);
        }
        
        public System.Threading.Tasks.Task SetLanguageAsync(string sessionID, string language)
        {
            return base.Channel.SetLanguageAsync(sessionID, language);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ArchiveSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.ArchiveSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ArchiveSoap))
            {
                return new System.ServiceModel.EndpointAddress("https://api.yukiworks.be/ws/Archive.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.ArchiveSoap12))
            {
                return new System.ServiceModel.EndpointAddress("https://api.yukiworks.be/ws/Archive.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            ArchiveSoap,
            
            ArchiveSoap12,
        }
    }
}
